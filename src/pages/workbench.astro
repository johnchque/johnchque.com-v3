---
import BaseLayout from "../layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
import { Icon } from 'astro-icon/components'

// Get all notes and sort by updated date (most recent first)
const allNotes = await getCollection("works");

const sortedNotes = allNotes.sort((a, b) => {
  const dateA = new Date(a.data.updated || a.data.date);
  const dateB = new Date(b.data.updated || b.data.date);
  return dateB.getTime() - dateA.getTime();
});

// Group notes by year
const notesByYear = sortedNotes.reduce(
  (acc, note) => {
    const date = new Date(note.data.updated || note.data.date);
    const year = date.getFullYear().toString();

    if (!acc[year]) {
      acc[year] = [];
    }
    acc[year].push(note);

    return acc;
  },
  {} as Record<string, typeof sortedNotes>,
);

// Sort years in descending order
const sortedYears = Object.keys(notesByYear).sort(
  (a, b) => parseInt(b) - parseInt(a),
);

// Helper function to get icon based on category
function getCategoryIcon(category: string): string {
  const icons: Record<string, string> = {
    Learning: "ri-book-2-fill",
    Seedling: "ri-seedling-fill",
    Budding: "ri-plant-fill",
    Evergreen: "ri-tree-fill",
    Now: "ri-time-line",
    Reflections: "ri-lightbulb-line",
    World: "ri-earth-line",
  };
  return icons[category] || "ri-leaf-fill";
}

// Helper function to format date
function formatDate(date: Date): string {
  return date.toLocaleDateString("en-US", { month: "long", day: "numeric" });
}
---

<BaseLayout
  title="Notes"
  description="Things I am independently learning and researching."
>
  <div class="container">
    <div class="row justify-content-start mb-4 ml-top-padding">
      <div class="heading-title col-12 col-lg-7">
        <header class="row align-items-start my-5">
          <div class="col">
            <a href="/"><Icon name="arrow-left"/><em>Home</em></a>
          </div>
          <div class="col-1 text-end">
            <a class="page-scroll" href="#" id="btnSwitch">
              <Icon name="moon">
            </a>
          </div>
        </header>
        <h1>The workbench</h1>

        <p class="subtitle">
          A consolidated list of all the things I created along the years.
        </p>
        <p>
          The projects listed here have multiple shapes and forms, with
          different collaborators and purposes. They go from making a music
          video for a friend to having my own startup.
        </p>
        <p>
          I love building and creating things. That's why the list you see here
          is diverse in nature. I always love to explore new knowledge areas and
          even better if they are outside my common expertise.
        </p>
        <div class="related-wrapper">
          {
            sortedYears.map((year) => (
              <div class="year-group mb-4 position-relative">
                <div class="year-heading year text-muted mb-3">{year}</div>
                {notesByYear[year].map((note) => {
                  const noteDate = new Date(
                    note.data.updated || note.data.date,
                  );
                  return (
                    <div class="row mb-3 mb-md-0">
                      <div class="col">
                        <a href={`/${note.id}`}>{note.data.title}</a>
                        <p>{note.data.description}</p>
                      </div>
                      <div class="col-auto text-end text-muted">
                        {formatDate(noteDate)}
                      </div>
                    </div>
                  );
                })}
              </div>
            ))
          }
        </div>
      </div>
    </div>
  </div>
</BaseLayout>
